[["模块module-施工中.html", "8 模块module （施工中） 8.1 引入模块 8.2 自定义模块 8.3 包package", " 8 模块module （施工中） 一个.py文件，就是一个模块module，里面的函数、变量等等，可以被其他代码所调用。 8.1 引入模块 先引入python自带的模块。例如用于数学运算的math，其中有大量函数，例如开平方根sqrt就在其中。 注：math模块下的全部内容，见python文档：https://docs.python.org/zh-cn/3.8/library/math.html 8.1.1 import import &lt;模块名&gt; import &lt;模块名&gt; as &lt;简称&gt; 注意：只要import一次，即可一直使用。一般我们可以放在代码的最前面。 我们可以用&lt;模块名&gt;.&lt;函数名/变量名&gt;来调用里面的函数或者变量，例如我们要调用math模块下的平方根sqrt()。 此时，模块内部的所有东西（函数、变量等），都必须通过&lt;模块名&gt;.来调用。 import math print(math.sqrt(4)) ## 2.0 或者math中的圆周率。 print(math.pi) ## 3.141592653589793 也可以采用简称或者缩写，例如想把math缩写成m import math as m print(m.sqrt(4)) ## 2.0 8.1.2 引入到当前名字空间 这种方法让模块内部的函数或者变量名，直接出现在当前名字空间中（调用的使用不用再挂着模块的名字）。如果这个模块下的某些东西特别常用，这样可以少打一些字 引入方法。 from &lt;模块名&gt; import &lt;函数/变量名&gt; as 简称 还是引入math中的开平方函数sqrt，可能你的代码中使用特别多，所以懒得打math.sqrt()，只想打sqrt() 同样，import一次，后续即可一直使用。 from math import sqrt print(sqrt(9)) ## 3.0 print(sqrt(4)) ## 2.0 还可以一次性引入模块下的所有名字 from &lt;模块名&gt; import * 这样你引用模块下的所有对象，都不必通过模块名来调用。 注意：`这种方式不推荐。引入大量的你可能用不到，甚至不知道存在的东西，不是一个好习惯。 8.2 自定义模块 要完成一个特定的项目，你可能要写不计其数代码，没有理由把这么多代码都放在一个.py文件下。 一般可以把相关的代码，放在一个.py文件中，然后在其他文件里用模块的方式调用。 例如，我们前面写过一个add函数，可以把2个数相加。 def add(x,y): return x + y print(add(1,2)) ## 3 也写过一个翻倍函数 def do_double(x): return x * 2 print(do_double(2)) ## 4 这2个函数，显然都可以归类为计算函数，我们把中2个函数放到一个专门的文件中，例如my_calc.py 文件my_calc.py的内容。 def add(x,y): return x + y def do_double(x): return x * 2 在我们后续的任务中，如果要调用这2个函数，就可以用import import my_calc print(my_calc.add(1,2)) ## 3 当然，如简称、直接导入名称等等，和前述一样。 以后，你就可以按照你自己逻辑，如同类的函数、数据，完全特定任务需要的组件等等，来组织自己的模块。 按逻辑把你的代码分类组织，是一个好习惯。 8.3 包package 多个模块，可以组成一个包。（略） "],["内置函数和常用库.html", "9 内置函数和常用库", " 9 内置函数和常用库 "],["numpy.html", "10 Numpy", " 10 Numpy "],["pandas.html", "11 Pandas", " 11 Pandas "],["综合数据处理.html", "12 综合数据处理", " 12 综合数据处理 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
